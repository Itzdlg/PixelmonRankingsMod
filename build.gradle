buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'net.minecraftforge.gradle'

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0'
group = 'sh.dominick.commissions' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'pixelmonrankings'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                pixelmonrankings {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                pixelmonrankings {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'pixelmonrankings', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                pixelmonrankings {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()

    flatDir {
        dir 'libs'
    }

    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }

    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
}

dependencies {
    minecraft('net.minecraftforge:forge:1.16.5-36.2.34')

    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.7.2'
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '9.0.0'

    implementation group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'

    implementation fg.deobf('com.pixelmonmod.pixelmon:Pixelmon-1.16.5-9.1.10-universal:9.1.10')

    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'

    implementation "net.kyori:adventure-api:4.17.0"
    implementation "net.kyori:adventure-text-minimessage:4.17.0"
    implementation "net.kyori:adventure-text-serializer-gson:4.17.0"

    implementation "org.spongepowered:configurate-yaml:4.1.2"
}

shadowJar {
    dependencies {
        exclude("META-INF/versions/**") // can't have any classes higher than Java 8

        include(dependency("org.xerial:sqlite-jdbc"))
        include(dependency("com.mysql:mysql-connector-j"))

        include(dependency("com.zaxxer:HikariCP"))

/*        include(dependency("net.kyori:adventure-api"))
        include(dependency("net.kyori:adventure-text-minimessage"))
        include(dependency("net.kyori:adventure-text-serializer-gson"))
        include(dependency("net.kyori:examination-api"))*/

        include(dependency("org.yaml:snakeyaml"))
        include(dependency("org.spongepowered:configurate-core"))
        include(dependency("org.spongepowered:configurate-yaml"))

        include(dependency("net.kyori:.*"))

        relocate("net.kyori", "sh.dominick.commissions.pixelmonrankings.shaded.net.kyori")
        relocate("org.yaml.snakeyaml", "sh.dominick.commissions.pixelmonrankings.shaded.snakeyaml")
        relocate("org.spongepowered", "sh.dominick.commissions.pixelmonrankings.shaded.sponge")
    }
}

reobf {
    shadowJar { }
}

// this replaces jar.finalizedBy('reobfJar') in the standard forge mod buildscript
tasks.build.dependsOn reobfShadowJar
jar.finalizedBy('reobfShadowJar')